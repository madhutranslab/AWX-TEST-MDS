---
- name: Ensure only authorized groups are assigned audit log ownership
  hosts: all
  become: yes
  vars:
    audit_conf: /etc/audit/auditd.conf
    timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"
  tasks:
 
    - name: Backup auditd.conf with timestamp
      copy:
        src: "{{ audit_conf }}"
        dest: "{{ audit_conf }}.bak_{{ timestamp }}"
        remote_src: yes
        owner: root
        group: root
        mode: '0640'
 
    - name: Ensure log_group is set to adm in auditd.conf
      lineinfile:
        path: "{{ audit_conf }}"
        regexp: '^\s*log_group\s*='
        line: 'log_group = adm'
        create: yes
        backup: no
 
    - name: Get audit log path from auditd.conf
      command: awk -F '=' '/^\s*log_file\s*=/ {print $2}' "{{ audit_conf }}"
      register: audit_log_path
      changed_when: false
 
    - name: Set log_dir variable from parsed path
      set_fact:
        log_dir: "{{ audit_log_path.stdout | dirname | trim }}"
 
    - name: Find all audit log files
      find:
        paths: "{{ log_dir }}"
        file_type: file
        recurse: yes
      register: audit_logs
 
    - name: Get file ownership details
      stat:
        path: "{{ item.path }}"
      loop: "{{ audit_logs.files }}"
      register: audit_log_stats
 
    - name: Change group ownership of unauthorized audit log files
      command: chgrp adm "{{ item.stat.path }}"
      when: item.stat.grp != "adm" and item.stat.grp != "root"
      loop: "{{ audit_log_stats.results }}"
      ignore_errors: yes
 
    - name: Ensure /var/log/audit/ group is adm
      file:
        path: /var/log/audit/
        group: adm
        recurse: yes
 
    - name: Reload auditd if allowed
      command: systemctl reload auditd
      ignore_errors: yes
 
    - name: Warn if auditd reload may not have applied
      debug:
        msg: "If 'auditd' could not be reloaded, a manual system reboot may be required for full effect."
