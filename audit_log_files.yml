---
- name: Ensure only authorized groups are assigned ownership of audit log files (CIS 5.2.4.4)
  hosts: all
  become: true
  vars:
    audit_conf_file: /etc/audit/auditd.conf
    log_group: adm
    timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"

  tasks:

    - name: Backup auditd.conf with timestamp
      copy:
        src: "{{ audit_conf_file }}"
        dest: "{{ audit_conf_file }}.bak_{{ timestamp }}"
        remote_src: yes

    - name: Set log_group to adm in auditd.conf
      lineinfile:
        path: "{{ audit_conf_file }}"
        regexp: '^(\s*)log_group\s*='
        line: 'log_group = {{ log_group }}'
        state: present
        backrefs: yes
        create: no

    - name: Get log file directory from auditd.conf
      shell: |
        awk -F '=' '/^\s*log_file\s*=/ {print $2}' "{{ audit_conf_file }}" | xargs dirname
      register: audit_log_dir
      changed_when: false

    - name: Change group ownership of audit log files to adm (or root)
      shell: |
        find {{ audit_log_dir.stdout }} -type f ! -group adm ! -group root -exec chgrp adm {} +
      args:
        warn: false

    - name: Change group of /var/log/audit to adm
      file:
        path: /var/log/audit
        group: adm
        recurse: yes
        state: directory

    - name: Try restarting auditd
      block:
        - name: Restart auditd
          systemd:
            name: auditd
            state: restarted
            enabled: yes
          register: restart_result
          failed_when: restart_result.failed
          ignore_errors: yes

        - name: Debug auditd restart failure - systemctl status
          command: systemctl status auditd.service
          register: auditd_status
          when: restart_result.failed
          ignore_errors: yes

        - name: Show auditd service status output
          debug:
            var: auditd_status.stdout_lines
          when: restart_result.failed

        - name: Debug auditd restart failure - journalctl logs
          command: journalctl -xe --no-pager -u auditd
          register: auditd_logs
          when: restart_result.failed
          ignore_errors: yes

        - name: Show auditd journal logs
          debug:
            var: auditd_logs.stdout_lines
          when: restart_result.failed

        - name: Fail if auditd still didn't restart
          fail:
            msg: "auditd failed to restart. Please check above debug output."
          when: restart_result.failed
