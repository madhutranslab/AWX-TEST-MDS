---
- name: Investigate and assign security contexts to unconfined services
  hosts: all
  become: true
  tasks:
    - name: Set timestamp for backups
      set_fact:
        timestamp: "{{ lookup('pipe', 'date +\"%Y-%m-%d_%H-%M-%S\"') }}"

    - name: Backup SELinux configuration before making changes
      copy:
        src: /etc/selinux/config
        dest: "/backup/selinux_config_{{ timestamp }}.bak"
        remote_src: yes

    - name: Get the list of unconfined services
      shell: |
        /bin/ps -eZ | /bin/grep unconfined_service_t | /bin/awk '{ print $NF } END {if (NR == 0) print "none"}'
      register: unconfined_services
      changed_when: false

    - name: Print unconfined services
      debug:
        msg: "{{ unconfined_services.stdout }}"

    - name: Ensure required service files exist
      file:
        path: "{{ item }}"
        state: touch
      loop:
        - "/path/to/falcon-sensor"
        - "/path/to/falcon-sensor-updater"
        - "/path/to/falcon-agent"
      when: item in unconfined_services.stdout

    - name: Backup relevant service files before making changes
      copy:
        src: "{{ item }}"
        dest: "/backup/{{ item | basename }}_{{ timestamp }}.bak"
        remote_src: yes
      loop:
        - "/path/to/falcon-sensor"
        - "/path/to/falcon-sensor-updater"
        - "/path/to/falcon-agent"
      when: item in unconfined_services.stdout

    - name: Investigate and assign SELinux contexts
      block:
        - name: Check and assign SELinux contexts for services
          shell: |
            if ! semanage fcontext -l | grep -q "{{ item | basename }}"; then
                semanage fcontext -a -t falcon_sensor_exec_t {{ item }}
                restorecon -Rv {{ item }}
            fi
          loop:
            - "/path/to/falcon-sensor"
            - "/path/to/falcon-sensor-updater"
            - "/path/to/falcon-agent"
          when: item in unconfined_services.stdout

    - name: Ensure SELinux is enforcing
      shell: |
        setenforce 1
        sed -i 's/^SELINUX=.*/SELINUX=enforcing/' /etc/selinux/config

    - name: Notify user to manually reboot
      debug:
        msg: "Please manually reboot the system for the changes to take effect."
