---
- name: CIS 3.1.3 - Ensure Bluetooth services are not in use
  hosts: all
  become: true
  vars:
    bluetooth_pkg: bluez
    bluetooth_service: bluetooth.service
    backup_dir: /var/backups/cis-bluetooth

  tasks:

    - name: Create backup directory if not exists
      file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0755'

    - name: Check if Bluetooth service is active
      shell: systemctl is-active {{ bluetooth_service }}
      register: bluetooth_service_status
      changed_when: false
      failed_when: false

    - name: Check if Bluetooth service is enabled
      shell: systemctl is-enabled {{ bluetooth_service }}
      register: bluetooth_service_enabled
      changed_when: false
      failed_when: false

    - name: Stop bluetooth service if running
      systemd:
        name: "{{ bluetooth_service }}"
        state: stopped
      when: bluetooth_service_status.stdout == "active"

    - name: Mask bluetooth service to prevent it from starting
      systemd:
        name: "{{ bluetooth_service }}"
        masked: true
      when: bluetooth_service_enabled.stdout == "enabled"

    - name: Check if bluez package is installed
      shell: rpm -q {{ bluetooth_pkg }}
      register: bluez_installed
      changed_when: false
      failed_when: false

    - name: Backup bluez package info (only if installed)
      shell: "rpm -qi {{ bluetooth_pkg }} > {{ backup_dir }}/{{ bluetooth_pkg }}_info_$(date +%F_%T).bak"
      when: bluez_installed.rc == 0

    - name: Remove bluez package (optional if no dependencies)
      command: dnf -y remove {{ bluetooth_pkg }}
      register: remove_bluez
      when: bluez_installed.rc == 0
      failed_when: false
      changed_when: "'Complete!' in remove_bluez.stdout or 'Removed' in remove_bluez.stdout"

    - name: Log Bluetooth hardening status
      debug:
        msg: >
          {{
            'Bluetooth service stopped and masked. bluez removed (if possible). Reboot may be required.'
          }}
