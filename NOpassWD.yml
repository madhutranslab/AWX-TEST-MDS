---
- name: Ensure sudoers files do not allow NOPASSWD
  hosts: all
  become: true
  vars:
    sudoers_files:
      - /etc/sudoers.d/100-oracle-cloud-agent-users
      - /etc/sudoers.d/90-cloud-init-users
    backup_dir: "/var/backups/sudoers"
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

  tasks:

    - name: Ensure backup directory exists
      file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0750'

    - name: Check if sudoers files exist
      stat:
        path: "{{ item }}"
      loop: "{{ sudoers_files }}"
      register: sudoers_status

    - name: Backup existing sudoers files
      copy:
        src: "{{ item.path }}"
        dest: "{{ backup_dir }}/{{ item.path | basename }}.bak.{{ timestamp }}"
        remote_src: true
      loop: "{{ sudoers_status.results }}"
      when: item.exists

    - name: Remove NOPASSWD entries from existing files
      lineinfile:
        path: "{{ item.path }}"
        regexp: '^\s*([^#]\S+\s+ALL=\(ALL\)\s+NOPASSWD:\s*.*)$'
        state: absent
      loop: "{{ sudoers_status.results }}"
      when: item.exists

    - name: Validate sudoers syntax
      command: "visudo -c"
      changed_when: false

    - name: Create missing sudoers files with secure default configuration
      copy:
        dest: "{{ item }}"
        content: "# Secure sudoers file created by Ansible\n"
        owner: root
        group: root
        mode: '0440'
      loop: "{{ sudoers_files }}"
      when: item not in sudoers_status.results | selectattr('exists', 'equalto', false) | map(attribute='path') | list
